{"version":3,"file":"myPlugin.chunk.0.js","sources":["/plugin:myPlugin/plugins/my_plugin/public/application.tsx","/plugin:myPlugin/plugins/my_plugin/public/components/app.tsx"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { MyPluginApp } from './components/app';\nimport { jsx as ___EmotionJSX } from \"@emotion/react\";\nexport const renderApp = ({\n  notifications,\n  http\n}, {\n  navigation\n}, {\n  appBasePath,\n  element\n}) => {\n  ReactDOM.render(___EmotionJSX(MyPluginApp, {\n    basename: appBasePath,\n    notifications: notifications,\n    http: http,\n    navigation: navigation\n  }), element);\n  return () => ReactDOM.unmountComponentAtNode(element);\n};","import React, { useState } from 'react';\nimport { i18n } from '@kbn/i18n';\nimport { FormattedMessage, I18nProvider } from '@kbn/i18n/react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { EuiButton, EuiHorizontalRule, EuiPage, EuiPageBody, EuiPageContent, EuiPageContentBody, EuiPageContentHeader, EuiPageHeader, EuiTitle, EuiText } from '@elastic/eui';\nimport { PLUGIN_ID, PLUGIN_NAME } from '../../common';\nimport { jsx as ___EmotionJSX } from \"@emotion/react\";\nexport const MyPluginApp = ({\n  basename,\n  notifications,\n  http,\n  navigation\n}) => {\n  // Use React hooks to manage state.\n  const [timestamp, setTimestamp] = useState();\n\n  const onClickHandler = () => {\n    // Use the core http service to make a response to the server API.\n    http.get('/api/my_plugin/example').then(res => {\n      setTimestamp(res.time); // Use the core notifications service to display a success message.\n\n      notifications.toasts.addSuccess(i18n.translate('myPlugin.dataUpdated', {\n        defaultMessage: 'Data updated'\n      }));\n    });\n  }; // Render the application DOM.\n  // Note that `navigation.ui.TopNavMenu` is a stateful component exported on the `navigation` plugin's start contract.\n\n\n  return ___EmotionJSX(Router, {\n    basename: basename\n  }, ___EmotionJSX(I18nProvider, null, ___EmotionJSX(React.Fragment, null, ___EmotionJSX(navigation.ui.TopNavMenu, {\n    appName: PLUGIN_ID,\n    showSearchBar: true,\n    useDefaultBehaviors: true\n  }), ___EmotionJSX(EuiPage, {\n    restrictWidth: \"1000px\"\n  }, ___EmotionJSX(EuiPageBody, null, ___EmotionJSX(EuiPageHeader, null, ___EmotionJSX(EuiTitle, {\n    size: \"l\"\n  }, ___EmotionJSX(\"h1\", null, ___EmotionJSX(FormattedMessage, {\n    id: \"myPlugin.helloWorldText\",\n    defaultMessage: \"{name}\",\n    values: {\n      name: PLUGIN_NAME\n    }\n  })))), ___EmotionJSX(EuiPageContent, null, ___EmotionJSX(EuiPageContentHeader, null, ___EmotionJSX(EuiTitle, null, ___EmotionJSX(\"h2\", null, ___EmotionJSX(FormattedMessage, {\n    id: \"myPlugin.congratulationsTitle\",\n    defaultMessage: \"Congratulations, you have successfully created a new Kibana Plugin!\"\n  })))), ___EmotionJSX(EuiPageContentBody, null, ___EmotionJSX(EuiText, null, ___EmotionJSX(\"p\", null, ___EmotionJSX(FormattedMessage, {\n    id: \"myPlugin.content\",\n    defaultMessage: \"Look through the generated code and check out the plugin development documentation.\"\n  })), ___EmotionJSX(EuiHorizontalRule, null), ___EmotionJSX(\"p\", null, ___EmotionJSX(FormattedMessage, {\n    id: \"myPlugin.timestampText\",\n    defaultMessage: \"Last timestamp: {time}\",\n    values: {\n      time: timestamp ? timestamp : 'Unknown'\n    }\n  })), ___EmotionJSX(EuiButton, {\n    type: \"primary\",\n    size: \"s\",\n    onClick: onClickHandler\n  }, ___EmotionJSX(FormattedMessage, {\n    id: \"myPlugin.buttonText\",\n    defaultMessage: \"Get data\"\n  }))))))))));\n};"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACpBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}